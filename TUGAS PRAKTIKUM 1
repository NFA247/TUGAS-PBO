CalculatorApp.java
import java.util.InputMismatchException;
import java.util.Scanner;

public class CalculatorApp {
    private static Scanner scanner = new Scanner(System.in);
    public static void main(String[] args) {
        char operator = 0;
        double firstNum = 0;
        double secondNum = 0;
        try {
            System.out.println("Please Input Number 1 :");
            firstNum = scanner.nextDouble();

            System.out.println("please Input Number 2 :");
            secondNum = scanner.nextDouble();

            System.out.println("Please Input Calculator Sign :");
            operator = scanner.next().charAt(0);

        }
        catch (InputMismatchException ime) {
            System.out.println("invalid input");
        }
        finally {
            if (operator != '+' & operator != '-' & operator != '*' & operator != '/') {
                throw new InputMismatchException("Invalid Calculator Sign!")  ;
            }
            Calculation calculation = new Calculation(firstNum, secondNum, operator);
            System.out.println("The Result  is :" + calculation.makeCalculation());
        }
    }
}

Calculation.java
import java.util.HashMap;
import java.util.Map;

public class Calculation {
    private char operation;
    private double operand1;
    private double operand2;
    private Map<Character, Operation> operationMap = new HashMap<>();

    public Calculation(double operand1, double operand2, char operation) {
        this.operand1 = operand1;
        this.operand2 = operand2;
        this.operation = operation;

        operationMap.put('+', (Operation) new Addition());
        operationMap.put('-', (Operation) new Subtraction());
        operationMap.put('*', (Operation) new Multiplication());
        operationMap.put('/', (Operation) new Division());
    }

    public double makeCalculation() {
        Operation operationMapValue = null;
        if (operationMap.containsKey(operation)) {
            operationMapValue = operationMap.get(operation);
            System.out.println(operationMap.get(operation));
        } else {
            System.out.println("Invalid sign");
        }
        return operationMapValue.calculateResult(operand1, operand2);
    }
}

Operation.java 
public interface Operation {
    double calculateResult(double left, double right);
}

Addition.java
public class Addition implements Operation {
    public double calculateResult(double left, double right) {
        return left + right;
    }
}

Substraction.java
public class Subtraction implements Operation {
    public double calculateResult(double left, double right) {
        return left - right;
    }
}

Multiplication.java
public class Multiplication implements Operation {
    public double calculateResult(double left, double right) {
        return left * right;
    }
}

Division.java
public class Multiplication implements Operation {
    public double calculateResult(double left, double right) {
        return left * right;
    }
}
